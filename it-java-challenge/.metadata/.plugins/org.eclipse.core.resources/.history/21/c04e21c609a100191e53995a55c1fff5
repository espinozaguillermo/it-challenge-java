package it.java.challenge.validator;

import java.util.Date;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;
import it.java.challenge.model.*;

public class GreaterDateValidator implements ConstraintValidator<GreaterDate, Carrera> {

//	private String firstDate;
//	private String secondDate;

	@Override
	public void initialize(GreaterDate constraintAnnotation) {
//		firstDate = constraintAnnotation.first();
//		secondDate = constraintAnnotation.second();
	}

	@Override
	public boolean isValid(Carrera value, ConstraintValidatorContext context) {
		try {
//			final Object firstObj = BeanUtils.getPropertyDescriptor(value.getClass(), firstDate);
//			final Object secondObj = BeanUtils.getPropertyDescriptor(value.getClass(), secondDate);
//			Integer firstObj = value.getClass().getField(firstDate).getInt(value);
//			Integer secondObj = value.getClass().getField(secondDate).getInt(value);
//
//			System.out.println("firstObj: " + firstObj);
//			System.out.println("secondObj: " + secondObj);
			Date fechadesde = value.getFechadesde();
			Date fechahasta = value.getFechahasta();
			return fechadesde == null && fechahasta == null
					|| fechadesde != null && fechahasta != null && fechadesde.compareTo(fechahasta) < 0;
		} catch (final Exception ignore) {
			// ignore
			return false;
		}
//		return true;

	}

	@Override
	public boolean isValid(Object value, ConstraintValidatorContext context) {
		// TODO Auto-generated method stub
		return false;
	}

}
